generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id_student String @id
  name       String
  
  appointments Appointment[]
  courses StudentCourse[]
}

model Course {
  id_course String @id
  name      String
  professors ProfessorCourse[]
}

model Professor {
  id_professor String @id
  name        String

  courses ProfessorCourse[]
}

model ProfessorCourse{
  id_professor_course Int @id @default(autoincrement())
  professor           Professor @relation(fields: [id_professor], references: [id_professor])
  id_professor        String
  course              Course @relation(fields: [id_course], references: [id_course])
  id_course           String
  appointments AppointmentSchedule[]
  students StudentCourse[]
  
  @@unique([id_professor, id_course])
}

model StudentCourse {
  id_student_course Int @id @default(autoincrement())
  student           Student @relation(fields: [id_student], references: [id_student])
  id_student        String
  professor_course  ProfessorCourse @relation(fields: [id_professor_course], references: [id_professor_course])
  id_professor_course         Int 
  enrollment_count  Int
  stars_rating      Int

  @@unique([id_student, id_professor_course])
}

model AppointmentSchedule {
  id_appointment_schedule Int @id @default(autoincrement())
  professorCourse         ProfessorCourse @relation(fields: [id_professor_course], references: [id_professor_course])
  id_professor_course     Int
  start_time              DateTime
  end_time                DateTime
  number_appointments     Int
  duration_appointment    Int // in minutes
  day_of_week             String
  appointments            Appointment[]

  @@unique([id_professor_course, day_of_week])
}

model Appointment {
  id_appointment Int @id @default(autoincrement())
  schedule       AppointmentSchedule @relation(fields: [id_appointment_schedule], references: [id_appointment_schedule])
  id_appointment_schedule Int
  date_time           DateTime
  student             Student? @relation(fields: [id_student], references: [id_student])
  id_student          String?
  is_reserved         Boolean
  semester            Semester @relation(fields: [id_semester], references: [id_semester])
  id_semester         Int
}

model Semester{
  id_semester Int @id @default(autoincrement())
  start_date  DateTime
  end_date    DateTime
  appointments Appointment[]
}